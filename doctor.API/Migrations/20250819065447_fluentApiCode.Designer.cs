// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace doctor.API.Migrations
{
    [DbContext(typeof(ClinicContext))]
    [Migration("20250819065447_fluentApiCode")]
    partial class fluentApiCode
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Department", b =>
                {
                    b.Property<int>("DepartmentNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentNumber"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentNumber")
                        .HasName("PK_Department");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentNumber = 101,
                            Name = "Orthopedics"
                        },
                        new
                        {
                            DepartmentNumber = 102,
                            Name = "Pediatrics"
                        },
                        new
                        {
                            DepartmentNumber = 103,
                            Name = "General Medicine"
                        },
                        new
                        {
                            DepartmentNumber = 104,
                            Name = "Neurology"
                        });
                });

            modelBuilder.Entity("Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Doctor");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            DepartmentId = 101,
                            Name = "Ashfak",
                            PhoneNumber = "1234567890",
                            YearsOfExperience = 10
                        },
                        new
                        {
                            Id = 101,
                            DepartmentId = 102,
                            Name = "Ashfak",
                            PhoneNumber = "0987654321",
                            YearsOfExperience = 10
                        });
                });

            modelBuilder.Entity("Doctor", b =>
                {
                    b.HasOne("Department", "Department")
                        .WithMany("Doctors")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Doctor_Department");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Department", b =>
                {
                    b.Navigation("Doctors");
                });
#pragma warning restore 612, 618
        }
    }
}
